buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.9.2"
    }
}

apply plugin: 'docker-compose'

subprojects {

    apply plugin: "java"
    sourceCompatibility = 14
    targetCompatibility = 14

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/eventuateio-oss/eventuate-maven-release"
        }
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }

}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_KAFKA_VERSION", eventuateMessagingKafkaImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion
    environment.put "EVENTUATE_CDC_KAFKA_ENABLE_BATCH_PROCESSING", eventuateCdcKafkaEnableBatchProcessing
    
    mysqlbinlog {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog.yml"]
    }

    mysqlbinlogwithjmeter {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog.yml", "docker-compose-jmeter-service.yml"]
        startedServices = ["jmeterservice", "customerservice"]
    }

    mysqlbinlogcdc {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog.yml"]
        startedServices = ["cdcservice"]
    }

    postgrespolling {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-polling.yml"]
    }

    postgrespollingcdc {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-polling.yml"]
        startedServices = ["cdcservice"]
    }

    postgreswal {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-wal.yml"]
    }

    postgreswalcdc {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-wal.yml"]
        startedServices = ["cdcservice"]
    }
}
