version: '3'
services:
  orderservice:
    build: ./order-service/
    ports:
      - "8081:8080"
    volumes:
      - ./build/libs:/app
    depends_on:
      - postgres
      - kafka
      - redis
      - zookeeper
      - cdcservice
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      REDIS_SERVERS: redis:6379
      REDIS_PARTITIONS: 2
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

  customerservice:
    build: ./customer-service/
    ports:
      - "8082:8080"
    volumes:
      - ./build/libs:/app
    depends_on:
      - postgres
      - kafka
      - redis
      - zookeeper
      - cdcservice
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      REDIS_SERVERS: redis:6379
      REDIS_PARTITIONS: 2
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

  orderhistoryservice:
    build: ./order-history-view-service/
    ports:
      - "8083:8080"
    depends_on:
      - postgres
      - kafka
      - redis
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      REDIS_SERVERS: redis:6379
      REDIS_PARTITIONS: 2
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

  zookeeper:
    image: eventuateio/eventuateio-local-zookeeper:0.30.0.M14
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
  
  
  kafka:
    image: eventuateio/eventuateio-local-kafka:0.30.0.M14
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      - ADVERTISED_HOST_NAME=${DOCKER_HOST_IP}
      - KAFKA_HEAP_OPTS=-Xmx320m -Xms320m
      - ZOOKEEPER_SERVERS=zookeeper:2181
  
  
  postgres:
    image: test-eventuate-tram-postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: eventuate
      POSTGRES_PASSWORD: eventuate

  redis:
    image: redis:5.0.3
    ports:
      - 6379:6379

  cdcservice:
    image: test-eventuate-tram-cdc-mysql-service
    ports:
      - "8099:8080"
    depends_on:
      - postgres
      - kafka
      - redis
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_TEST_ON_BORROW: "true"
      SPRING_DATASOURCE_VALIDATION_QUERY: SELECT 1
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATELOCAL_CDC_READER_NAME: PostgresWalReader
      REDIS_SERVERS: redis:6379
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      REDIS_PARTITIONS: 2